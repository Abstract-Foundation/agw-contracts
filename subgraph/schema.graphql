type Total @entity {
  "0x746f74616c"
  id: Bytes!
  createdAccounts: Int!
  deployedAccounts: Int!
  transactions: Int!
  backedUp: Int!
  gasSponsored: BigInt!
  invested: BigInt!
  investedEth: BigInt!
  realizedGain: BigInt!
  realizedGainEth: BigInt!
}

type Day @entity {
  "day start timestamp concat 0x0000"
  id: Bytes!
  createdAccounts: Int!
  deployedAccounts: Int!
  activeAccounts: Int!
  transactions: Int!
  gasSponsored: BigInt!
  investIn: BigInt!
  investInEth: BigInt!
  investOut: BigInt!
  investOutEth: BigInt!
  realizedGain: BigInt!
  realizedGainEth: BigInt!
  swappedTo: [DailySwappedTo!]! @derivedFrom(field: "day")
}

type Week @entity {
  "week start timestamp"
  id: Bytes!
  createdAccounts: Int!
  deployedAccounts: Int!
  activeAccounts: Int!
  transactions: Int!
  gasSponsored: BigInt!
  investIn: BigInt!
  investInEth: BigInt!
  investOut: BigInt!
  investOutEth: BigInt!
  realizedGain: BigInt!
  realizedGainEth: BigInt!
  swappedTo: [WeeklySwappedTo!]! @derivedFrom(field: "week")
}

type Month @entity {
  "month start timestamp concat 0x00"
  id: Bytes!
  createdAccounts: Int!
  deployedAccounts: Int!
  activeAccounts: Int!
  transactions: Int!
  gasSponsored: BigInt!
  investIn: BigInt!
  investInEth: BigInt!
  investOut: BigInt!
  investOutEth: BigInt!
  realizedGain: BigInt!
  realizedGainEth: BigInt!
  swappedTo: [MonthlySwappedTo!]! @derivedFrom(field: "month")
}

type DailySwappedTo @entity {
  "day.id.concat(erc20)"
  id: Bytes!
  day: Day!
  erc20: Bytes!
  amount: BigInt!
}

type WeeklySwappedTo @entity {
  "week.id.concat(erc20)"
  id: Bytes!
  week: Week!
  erc20: Bytes!
  amount: BigInt!
}

type MonthlySwappedTo @entity {
  "month.id.concat(erc20)"
  id: Bytes!
  month: Month!
  erc20: Bytes!
  amount: BigInt!
}

type DayAccount @entity(immutable: true) {
  "account.id.concat(day.id)"
  id: Bytes!
  account: ClaveAccount!
  day: Day!
}

type WeekAccount @entity(immutable: true) {
  "account.id.concat(week.id)"
  id: Bytes!
  account: ClaveAccount!
  week: Week!
}

type MonthAccount @entity(immutable: true) {
  "account.id.concat(month.id)"
  id: Bytes!
  account: ClaveAccount!
  month: Month!
}

type ClaveAccount @entity {
  "account address"
  id: Bytes!
  creationDate: BigInt!
  deployDate: BigInt
  recoveryCount: Int!
  hasRecovery: Boolean!
  isRecovering: Boolean!
  txCount: Int!
  "account implementation address"
  implementation: Bytes
  invested: BigInt!
  investedEth: BigInt!
  realizedGain: BigInt!
  realizedGainEth: BigInt!
  transactions: [ClaveTransaction!]! @derivedFrom(field: "sender")
  inAppSwaps: [InAppSwap!]! @derivedFrom(field: "account")
  activeDays: [DayAccount!]! @derivedFrom(field: "account")
  activeWeeks: [WeekAccount!]! @derivedFrom(field: "account")
  activeMonths: [MonthAccount!]! @derivedFrom(field: "account")
}

enum Paymaster {
  None
  ERC20
  Gasless
}

type ClaveTransaction @entity(immutable: true) {
  "transaction hash"
  id: Bytes!
  "tx.from"
  sender: ClaveAccount!
  "tx.to"
  to: Bytes
  "tx.value"
  value: BigInt!
  "tx.gasPrice * tx.gasUsed"
  gasCost: BigInt!
  "type of paymaster used"
  paymaster: Paymaster!
  "block.timestamp"
  date: BigInt!
}

type InAppSwap @entity(immutable: true) {
  id: Bytes!
  account: ClaveAccount!
  tokenIn: Bytes!
  amountIn: BigInt!
  tokenOut: Bytes!
  amountOut: BigInt!
  date: BigInt!
}
